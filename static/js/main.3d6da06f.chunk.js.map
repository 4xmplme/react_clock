{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentTime","Date","toUTCString","slice","Clock","state","time","timerId","this","window","setInterval","setState","console","info","prevProps","oldName","name","newName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MAEtBY,QAAQC,KAAK,EAAKR,MAAMC,QACvB,OAZP,gCAeE,SAAmBQ,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUT,KAAKU,MAAMF,KAEvBD,IAAYE,GAEdL,QAAQO,MAAR,uBAA8BJ,EAA9B,eAA4CE,MArBlD,kCAyBE,WACER,OAAOW,cAAcZ,KAAKD,WA1B9B,oBA6BE,WACE,IAAQS,EAASR,KAAKU,MAAdF,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGb,KAAKH,MAAMC,cAzCtB,GAA2BgB,IAAMC,WCVjC,SAASC,IACP,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,MAEHO,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEkB,UAAU,OAG5BE,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEkB,UAAU,SApBhC,kCAwBE,WACEpB,OAAOW,cAAcZ,KAAKD,WAzB9B,oBA4BE,WACE,OACE,sBAAKc,UAAU,MAAf,UACE,6CAECb,KAAKH,MAAMwB,UACV,cAAC,EAAD,CAAOb,KAAMR,KAAKH,MAAMyB,mBAlClC,GAAyBR,IAAMC,WCP/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.3d6da06f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: string;\n};\n\nfunction getCurrentTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: getCurrentTime(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: getCurrentTime() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}